---
version: 2
jobs:
  build:
    working_directory: ~/proxmox
    docker:
      - image: circleci/ruby:2.5.7-buster # Puppet 6 is packaged bundled with that version of ruby
        environment: 
          PUPPET_GEM_VERSION: "~> 6.0"
    steps:
      - checkout

      # Setup bundler and display all versions
      - run: gem install bundler
      - run: bundle config --local path "vendor/bundle"
      - run: ruby -v && gem -v && bundle -v

      # Restore Cached Dependencies
      - type: cache-restore
        name: Restore bundle cache
        keys:
          # when lock file changes, use increasingly general patterns to restore cache
          - puppet-proxmox-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile" }}
          - puppet-proxmox-{{ arch }}-{{ .Branch }}-
          - puppet-proxmox-{{ arch }}-

      # Bundle install dependencies
      - run: bundle install
      - run: bundle clean

      # Cache Dependencies
      - type: cache-save
        name: Store bundle cache
        key: puppet-proxmox-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile" }}
        paths:
          - vendor/bundle

      - run: 
          name: Get Ruby/Gem/Puppet versions for this run
          command: ruby --version && echo -n 'gem ' && gem --version && echo -n 'puppet ' && bundle exec puppet --version
      - run:
          name: Syntax checks
          command: bundle exec rake check:symlinks check:git_ignore check:dot_underscore check:test_file rubocop syntax lint metadata_lint
#      - run: 
#          name: Puppet files syntax check
#          command: for file in $(find manifests/ -name '*.pp'); do echo $file; puppet parser validate $file || exit 1; done
#      - run: 
#          name: ERB files syntax check
#          command: for file in $(find templates/ -name "*.erb"); do echo $file; erb -P -x -T - "${file}" || exit 1; done
#      - run: 
#          name: Shell scripts syntax check
#          command: for file in $(find files/ -name "*.sh"); do echo $file; bash -n $file || exit 1; done
#      - run: 
#          name: Custom facts syntax check
#          command: for file in $(find lib/facter -name "*.rb"); do echo $file; ruby -c $file || exit 1; done
#      - run: 
#          name: Check for non-printable characters
#          command: grep -I -H -P -n "[\xa0]" --color=yes -r * || tr '\302\102' 'X'
#      - run: 
#          name: Install puppet-lint
#          command: gem install puppet-lint
#      - run: 
#          name: Puppet lint; only clean code in our Org ;-)
#          command: ret=0; for file in $(find manifests/ -name '*.pp'); do echo $file; puppet-lint --fail-on-warnings --no-140chars-check $file || ret=1; done; exit $ret
#